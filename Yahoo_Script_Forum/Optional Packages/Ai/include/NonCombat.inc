///////////////////////////////////////////////////////////
// NonCombat.inc
//
// Non combat main processing.
//
// DO NOT EDIT THIS FILE.
//
// Creator: Mercy
// Contact: mkow@sympatico.ca
//
// Created: 12-Sept-2000
// Updated: 12-Sept-2000
//
///////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////
// GLOBAL VARIABLES
///////////////////////////////////////////////////////////
var NextSleep := 0;

///////////////////////////////////////////////////////////
// Purpose: Main processing for NPC when not in combat.
// Params:	none
// Returns: N/A
///////////////////////////////////////////////////////////
function NonCombatProcessing()
	var pcsnear := 0;

	// Run custom hook.
	if (NonCombat())
		return;
	endif

	// Sleep waiting for someone to come near.
	if (ShouldSleep())
		GoToSleep();
		return 1;
	endif

	// Look around.. if can't group with it, try to fight it!
	foreach mobile in ListMobilesInLineOfSight(me, ai.ConsiderRange)
		// Run custom hook per mobile.
		if (NonCombatPerMobile(mobile))
			continue;
		endif

		if (!FormGroup(mobile) and ConsiderCombat(mobile));
			Fight(mobile);
		else
			if (GroupedWith(mobile) and mydesc.castpct and NextCast < ReadGameClock())
			// See if my buddy needs a heal.
				if (mobile.hp < mobile.maxhp)
					CastHeal(mobile);
				endif

				if (Poisoned(mobile))
					CastCure(mobile);
				endif
			endif
		endif
	endforeach
	return 0;
endfunction

///////////////////////////////////////////////////////////
// Purpose: Checks if there are any PCs around.
// Params:  none
// Returns: 1 		PCs around
//			0		OK to go to sleep, no PCs.
///////////////////////////////////////////////////////////
function ShouldSleep()
	if (AI_SLEEP_RANGE = 0)
		return 0;
	endif

	var sleeptime := ReadGameClock();
	if (NextSleep > sleeptime)
		return 0;
	endif
	NextSleep := sleeptime + AI_SLEEP_INTERVAL;

	foreach pc in ListMobilesInLineOfSight(me, AI_SLEEP_RANGE)
		if (/*!pc.cmdlevel and */!pc.npctemplate) // Staff not count as player.
			return 0;
		endif
	endforeach

	return 1;
endfunction

///////////////////////////////////////////////////////////
// Purpose: Puts me to sleep till someone comes close.
//			Checks if I have hiding skill, and hides me too.
// Params:  none
// Returns: N/A
///////////////////////////////////////////////////////////
function GoToSleep()
	var ev;
	var wakeup := 0;

//	EnableEvents(EVID_ENTEREDAREA, AI_SLEEP_RANGE);

	// Check if I should hide.
	if (GetSkill(me, SKILLID_HIDING) > 0)
		me.hidden := 1;
	endif

	repeat
		ev := wait_for_event(AI_SLEEP_TIME);

		case (ev.type)

			EVID_ENTEREDAREA:
				// Don't wake up to other NPCs.
				if (!ev.source.npctemplate)
					wakeup := 1;
				endif

			EVID_ENGAGED:
			EVID_DAMAGED:
				wakeup := 1;

		endcase

		// Check again after the sleep, in case someone snuck in hidden and did
		// not set off the EVID_ENTEREDAREA event.
		if (!ShouldSleep())
			wakeup := 1;
		endif

	until (wakeup);

	PlaySoundEffect(me, SFX_50); // Play the rustle sound.
	PlaySoundEffect(me, SFX_50); // Again for good measure.

	sleep(2);
	me.hidden := 0;
	say("*" + me.name + " springs from hiding!*");

//	EnableEvents(EVID_ENTEREDAREA, ai.ConsiderRange);
endfunction