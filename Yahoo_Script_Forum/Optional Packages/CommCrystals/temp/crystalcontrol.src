use uo;
use os;
use basic;

include "include/eventid";

program receivercontrol(crystal);

local i, j, placeholder, evwaiting, receiver, Links, LinkList, LinkCount, Charges;

RegisterForSpeechEvents(crystal, 1);
EnableEvents(EVID_SPEECH,1);
local ev;

while(1)
ev := os::wait_for_event( 3 );
if(ev)
	Local IsOn := GetObjProperty(crystal, "Status");
	IsOn := CStr(IsOn);

	If (IsOn = "ON")
		if (ev.type=EVID_SPEECH)

			LinkList := GetObjProperty(crystal, "Links");
			Charges := GetObjProperty(crystal, "Charges");
			Charges := Cint(Charges);
			Links := Splitwords(LinkList);
			LinkCount := Len(Links);
			LinkCount := LinkCount + 1;
			i := 1;
			local expenditure := -1;

			While (i < LinkCount)
				if (Charges > 0)
					placeholder := Cint(Links[i]);
					receiver := SystemFindObjectBySerial(placeholder);
					PrintTextAbove(receiver, "Message from "+ev.source.name+": " + ev.text);
					expenditure := expenditure + 1;
				endif
				i := i + 1;
			endwhile
			Charges := Charges - expenditure;
			SetObjProperty(crystal, "Charges", CStr(Charges) );
			SendSysMessage(ev.source, "Message sent: " + expenditure + " charges used, " + Charges + "remain.");
		endif
	endif
endif
endwhile
endprogram