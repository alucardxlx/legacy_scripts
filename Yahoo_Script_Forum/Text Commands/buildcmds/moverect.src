////////////////////////////////////////////////////////////////////////////////////////
//  MOVERECT.SRC - ingame command
//  This is a "fastbuild" command you supply direction and distance to move as
//  arguments. If dist is left out it uses a default of 1.
//  This command is great for moving a large number of things within a rectanglar area.
//  Todo:
//   Clean up the code when abs() is avail. and C-style for loops
//   don't require initialization.
//  Author: ens 1999/01/02
//  Recent Modifications:]
//      1999/01/25 Ignatius Created the command TILE.
//      2000/02/26 Angreal modified into moverect.
/////////////////////////////////////////////////////////////////////////////////////////
include "include/modules";
include "include/math";
include "include/gumps";

var xdist, ydist, zdist, objtype, res, range, things;

program textcmd_moverect( who )   
	var moveinfo := DoGump( who );
	if( moveinfo[1] == 1026 || moveinfo[1] == 1 )
		return;
	endif
    	xdist := CInt( moveinfo[2] );
    	ydist := CInt( moveinfo[3] );
	zdist := CInt( moveinfo[4] );
	objtype := CInt( moveinfo[5] );
      SendSysMessage( who, "Select left-most corner" );
    	var coords1 := TargetCoordinates( who );
      SendSysMessage( who, "Select right-most corner" );
    	var coords2 := TargetCoordinates( who );
    	if ( ( !coords1 ) || ( !coords2 ) )
        	SendSysMessage( who, "Missing coordinate set. Aborting." );
        	return;
    	endif
      var centerx, centery, centerz;
    	centerx	:= CInt( (coords1.x + coords2.x)/2 );
	centery	:= CInt( (coords1.y + coords2.y)/2 );
	centerz	:= CInt( (coords1.z + coords2.z)/2 );
	range		:= Max( Abs(coords2.x-coords1.x)/2, Abs(coords2.y-coords1.y)/2 );
	if( !objtype )
		things := ListItemsNearLocation( centerx, centery, centerz, range );
	else
		things := ListItemsNearLocationOfType( centerx, centery, centerz, range, objtype );
	endif
 	foreach item in things
		MoveItemToLocation( item, item.x + xdist, item.y + ydist, item.z + zdist, MOVEITEM_FORCELOCATION );
           	sleepms(1);
    	endforeach
    	SendSysMessage( who, "Command completed." );
endprogram

function DoGump( who )
	GFSetRef( 50, 50 );
	GFPage( 0 );
	GFNoDispose();
	GFResizePic( 0, 0, BKGND_GOLDTRIM, 210, 290 );
	GFGumpPic( 10, 71, 0x462 );
	GFGumpPic( 10, 116, 0x462 );
	GFGumpPic( 10, 161, 0x462 );
	GFGumpPic( 10, 206, 0x462 );
	GFTextMid( 0, 15, 210, 4, "Enter Move Variables" );
	GFTextLine( 10,  50, 4, "Enter X Distance" );
	GFTextLine( 10,  95, 4, "Enter Y Distance" );
	GFTextLine( 10, 140, 4, "Enter Z Distance" );
	GFTextLine( 10, 185, 4, "Enter Objtype" );
	GFButtonID( 50, 235, 0x992, 0x993, 1 );
	GFButtonID( 120, 235, 0x995, 0x996, 1 );
	xdist := GFTextEntry( 11, 70, 175, 16, 4 );
	ydist := GFTextEntry( 11, 115, 175, 16, 4 );
	zdist := GFTextEntry( 11, 160, 175, 16, 4 );
	objtype := GFTextEntry( 11, 205, 175, 16, 4 );
	res := GFSendGump( who );
	xdist := GFExtractData( xdist.keyid, res );
	ydist := GFExtractData( ydist.keyid, res );
	zdist := GFExtractData( zdist.keyid, res );
	objtype := GFExtractData( objtype.keyid, res );
	var params := { CInt(res[0]), xdist, ydist, zdist, objtype };
	return params;
endfunction