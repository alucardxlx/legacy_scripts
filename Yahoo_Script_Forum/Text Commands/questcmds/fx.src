include "include/modules";
include "include/client";
include "include/gumps";
include "include/math";
include "include/output";

var effects := {	"SPLASH", "EXPLODE", "EXPLODE", "EXPLODE", "FIREBALL", "MAGIC ARROW", "FIRE BOLT",
			"EXPLODE BALL", "FLAMESTRIKE", "SMOKE", "SPELL FAIL", "BLESS EFFECT", "CURSE_EFFECT",
			"SPARK EFFECT", "HEAL EFFECT", "MARK EFFECT", "BLUEMOONSTART", "BLADES_EMERGE",
			"GLOW", "GLOW SPIKE", "DEATH FUNNEL", "STATIC", "POISON FIELD EW", "POISON FIELD NS",
			"ENERGY FIELD EW", "ENERGY FIELD NS", "PARA FIELD EW", "PARA FIELD NS", "FIRE FIELD EW",
			"FIRE FIELD NS", "POISON FIELD EW", "FIRE FIELD EW", "FIRE FIELD NS", "BLACK MOONGATE",
			"WHITE MOONGATE" };
var i, j, k, num_sets;

program fx(who, effect)
	effect := CInt( effect );
	if( !effect )
		effect := DoGump( who );
	endif
	if( !effect )
		return;
	endif
	PlayStationaryEffect( who.x, who.y + 5, who.z, effect, 7, 0x30 );
endprogram

function DoGump( who )
	num_sets := len(effects);
	GFSetRef( 20, 20 );
	GFPage( 0 );
	GFNoDispose();
	GFResizePic( 0, 0, BKGND_GOLDTRIM, 450, 405 );
	GFTextMid( 0, 10, 450, 4, "Choose an effect" );
	fill_in_pages();
	var res := GFSendGump( who );
	if( res[0] == 0 )
		return 0;
	endif
	if( !(res[0]-1024) )
		SendSysMessage(who, "Invalid effect!");
		return;
	endif
	var effect_num := GetEffect(CInt(res[0]-1024));
	return CInt(effect_num);
endfunction

function fill_in_pages()
	var x_start := 25, y_start := 10;
	var num_pages := CInt( CInt(num_sets/40) + 1 );
	for( i := 1; i <= num_pages; i := i + 1 )
		GFPage( i );
		for( j := 1; j <= num_pages; j := j + 1 )
			if( Mod( j, 2 ) )
				GFTextLine( -40 + (CInt(j/2)+1) * 76, 350, 4, "Page " + j );
				if( i != j )
					GFButtonPage( -56 + (CInt(j/2)+1) * 76, 354, 0x3, 0x4, j );
				endif
			else
				GFTextLine( -40 + CInt(j/2) * 76, 370, 4, "Page " + j );
				if( i != j )
					GFButtonPage( -56 + CInt(j/2) * 76, 374, 0x3, 0x4, j );
				endif
			endif
		endfor
		var num_cols := CInt( CInt( (num_sets-(i-1)*40)/20 ) + 1 );
		if( num_cols > 2 )
			num_cols := 2;
		endif
		for( j := 1; j <= num_cols; j := j + 1 )
			var last_set := CInt( num_sets - (i-1)*40 - (j-1)*20 );
			if( last_set > 20 )
				last_set := 20;
			endif
			for( k := 1; k <= last_set; k := k + 1 )
				var new_x := x_start + (j-1)*200;
				var new_y := y_start + (k*16);
				GFTextLine( new_x, new_y, 8, effects[k+(j-1)*20+(i-1)*40] );
				GFButtonID( new_x - 16, new_y + 4, 0x4B9, 0x4BA, 1 );
			endfor
		endfor
	endfor
endfunction

function GetEffect(effect_num)
	case(effect_num)
		1:	return 0x352d;
		2:	return 0x36cb;
		3:	return 0x36b0;
		4:	return 0x36bd;
		5:	return 0x36d4;
		6:	return 0x36e4;
		7:	return 0x36f4;
		8:	return 0x36fe;
		9:	return 0x3709;
		10:	return 0x3728;
		11:	return 0x3735;
		12:	return 0x373a;
		13:	return 0x374a;
		14:	return 0x375a;
		15:	return 0x376a;
		16:	return 0x3779;
		17:	return 0x3789;
		18:	return 0x37a0;
		19:	return 0x37b9;
		20:	return 0x37c3;
		21:	return 0x37cc;
		22:	return 0x3818;
		23:	return 0x3915;
		24:	return 0x3921;
		25:	return 0x3947;
		26:	return 0x3956;
		27:	return 0x3967;
		28:	return 0x3979;
		29:	return 0x398C;
		30:	return 0x3996;
		31:	return 0x3E02;
		32:	return 0x3E27;
		33:	return 0x3E31;
		34:	return 0x1FCB;
		35:	return 0x1FDE;
	endcase
endfunction