use uo;
use cfgfile;

 
program makeset( who )
        local prop2 := array;
        local props2 := array;
        prop2.+ name;
        prop2.+ value;
        local cfg := ReadConfigfile("sets");
        local numprops2 := 1;
        local numthings := 0;
        local things := array;
        local theitem:= array;
        local ttype;
        sendsysmessage(who, "Select the center of the set area:");
        local wherecenter := targetcoordinates(who);
        sendsysmessage(who, "Select the upper left corner of the set area:");
        local whereleft := targetcoordinates(who);
        sendsysmessage(who, "Select the lower right corner of the set area:");
        local whereright := targetcoordinates(who);
local lowerz := Requestinput(who, who.backpack , "Type the lower z coordinate of the set area:");
local upperz := Requestinput(who, who.backpack , "Type the upper z coordinate of the set area:");
	lowerz := cint(lowerz);
        upperz := cint(upperz);
local thesetname := Requestinput(who, who.backpack , "What would you like to call this set?");
if (cfg[thesetname])
	sendsysmessage(who, "That set name is already taken!");
	return;
endif
        
local stuff := ListObjectsInBox( whereleft.x,whereleft.y,lowerz,whereright.x,whereright.y,upperz);
        theitem.+ objtype;
        theitem.+ x;
        theitem.+ y;
        theitem.+ z;
        theitem.+ color;
        theitem.+ key;


        foreach thing in stuff

		if (thing.mana)
			continue;
		endif
                
                theitem.objtype := thing.objtype;
                numthings := numthings + 1;                
                theitem.x := wherecenter.x - thing.x;
                theitem.y := wherecenter.y - thing.y;
                theitem.z := lowerz - thing.z;
                theitem.color := thing.color;
                things[numthings] := theitem;
        endforeach


        local intkey := GetConfigMaxIntKey( cfg);
        
        intkey := intkey + 1;
        
 
        foreach item in things
        
        local prop := array;
        local props := array;
        prop.+ name;
        prop.+ value;
        local num_props := 1;
        

        
                prop.name := "objtype";
                prop.value := item.objtype;
                props[num_props] := prop;
                num_props := num_props + 1;
                
                
                prop.name := "x";
                prop.value := item.x;
                props[num_props] := prop;
                num_props := num_props + 1;
                
                prop.name := "y";
                prop.value := item.y;
                props[num_props] := prop;
                num_props := num_props + 1;
                
                prop.name := "z";
                prop.value := item.z;
                props[num_props] := prop;
                num_props := num_props + 1;
                
                prop.name := "color";
                prop.value := item.color;
                props[num_props] := prop;
                num_props := num_props + 1;
                
                
                ttype := "setitem";
             
                
                AppendConfigFileElem( "sets", ttype, intkey, props );
                item.key := intkey;
               
                
                prop2.name := "item";
                prop2.value := intkey;
                intkey := intkey + 1;
                props2[numprops2] := prop2;
                numprops2 := numprops2 + 1;
                
        endforeach

        
        AppendConfigFileElem( "sets", "set", thesetname, props2 );
        unloadconfigfile("sets");
endprogram
